{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  dataPickr: document.getElementById('datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet setIntervalId = null;\n\nrefs.startBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    const userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate > options.defaultDate) {\n      refs.startBtn.disabled = false;\n\n      refs.startBtn.addEventListener('click', () => {\n        setIntervalId = setInterval(() => {\n          const deltaTime = userSelectedDate - Date.now();\n          const time = convertMs(deltaTime);\n\n          updateClockFace(time);\n\n          if (deltaTime < 1000) {\n            clearInterval(setIntervalId);\n          }\n        }, 1000);\n\n        refs.startBtn.disabled = true;\n        refs.dataPickr.disabled = true;\n      });\n    } else {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    }\n  },\n};\n\nflatpickr(refs.dataPickr, options);\n\nfunction updateClockFace({ days, hours, minutes, seconds }) {\n  refs.days.textContent = addLeadingZero(days);\n  refs.hours.textContent = addLeadingZero(hours);\n  refs.minutes.textContent = addLeadingZero(minutes);\n  refs.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["refs","setIntervalId","options","selectedDates","userSelectedDate","deltaTime","time","convertMs","updateClockFace","iziToast","flatpickr","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"+IASA,MAAMA,EAAO,CACX,UAAW,SAAS,eAAe,iBAAiB,EACpD,SAAU,SAAS,cAAc,cAAc,EAC/C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAgB,KAEpBD,EAAK,SAAS,SAAW,GAEzB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,MAAMC,EAAmBD,EAAc,GAEnCC,EAAmBF,EAAQ,aAC7BF,EAAK,SAAS,SAAW,GAEzBA,EAAK,SAAS,iBAAiB,QAAS,IAAM,CAC5CC,EAAgB,YAAY,IAAM,CAChC,MAAMI,EAAYD,EAAmB,KAAK,IAAG,EACvCE,EAAOC,EAAUF,CAAS,EAEhCG,EAAgBF,CAAI,EAEhBD,EAAY,KACd,cAAcJ,CAAa,CAE9B,EAAE,GAAI,EAEPD,EAAK,SAAS,SAAW,GACzBA,EAAK,UAAU,SAAW,EAClC,CAAO,GAEDS,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,CAEJ,CACH,EAEAC,EAAUV,EAAK,UAAWE,CAAO,EAEjC,SAASM,EAAgB,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1Dd,EAAK,KAAK,YAAce,EAAeJ,CAAI,EAC3CX,EAAK,MAAM,YAAce,EAAeH,CAAK,EAC7CZ,EAAK,QAAQ,YAAce,EAAeF,CAAO,EACjDb,EAAK,QAAQ,YAAce,EAAeD,CAAO,CACnD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAAST,EAAUU,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}